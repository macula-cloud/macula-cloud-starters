logging:
   pattern:
      file: '%d %file:%line %p - %m%n'
      console: '%d %file:%line %p - %m%n'
   level:
      ROOT: INFO
security:
   oauth2:
      client:
         access-token-uri: http://localhost:8030/oauth/token
         user-authorization-uri: http://localhost:8030/oauth/authorize
      resource:
         token-info-uri: http://localhost:8030/oauth/check_token
         user-info-uri: http://localhost:8030/api/profile/me
macula:
   cloud:
      application:
         group: scmp
         name: ${spring.application.name}
      event:
         kafka: true
      cache:
         j2cache: true
      feign:
         oauth2: true
j2cache:
   open-spring-cache: true
   allow-null-values: true
   cache-clean-mode: passive
   broadcast: net.oschina.j2cache.cache.support.redis.SpringRedisPubSubPolicy
   L1:
      provider_class: ehcache
   L2:
      provider_class: net.oschina.j2cache.cache.support.redis.SpringRedisProvider
      config_section: redis
feign:
   hystrix:
      enabled: true
   httpclient:
      connection-timeout: 30000
spring:
   cache:
      type: GENERIC
   mvc:
      static-path-pattern: /static/**
   messages:
      basename: i18n/messages
   datasource:
      driver-class-name: com.mysql.cj.jdbc.Driver
      type: com.alibaba.druid.pool.DruidDataSource
   jpa:
      database: MYSQL
      show-sql: true
      database-platform: org.hibernate.dialect.MySQL8Dialect
      open-in-view: false
      hibernate:
         current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext
         dialect: org.hibernate.dialect.MySQL8Dialect
         ddl-auto: update
         naming:
            physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
   redis:
      host: 172.20.72.137
      port: 6379
      database: 0
      password: macula@^cloud$
      jedis:
         pool:
            max-active: 20
            max-idle: 20
            min-idle: 0
            max-wait: -1m
   cloud:
      inetutils:
         ignored-interfaces: eth0
         preferred-networks: 10.0
      stream:
         kafka:
            binder:
               brokers:
               - 172.20.72.135:9094
               auto-add-partitions: true
         default-binder: kafka
         bindings:
            macula-broadcast-event-input:
               destination: macula-broadcast-event
            macula-broadcast-event-output:
               destination: macula-broadcast-event
               content-type: application/x-java-object
            macula-business-event-input:
               destination: macula-business-event
               group: ${spring.application.name}
            macula-business-event-output:
               destination: macula-business-event
               content-type: application/x-java-object